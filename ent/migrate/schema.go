// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChessesColumns holds the columns for the "chesses" table.
	ChessesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"waiting", "in_progress", "finished", "aborted"}, Default: "waiting"},
		{Name: "result", Type: field.TypeEnum, Enums: []string{"1-0", "0-1", "1-1", "0-0"}, Default: "0-0"},
		{Name: "user_white_id", Type: field.TypeUUID},
		{Name: "user_black_id", Type: field.TypeUUID},
	}
	// ChessesTable holds the schema information for the "chesses" table.
	ChessesTable = &schema.Table{
		Name:       "chesses",
		Columns:    ChessesColumns,
		PrimaryKey: []*schema.Column{ChessesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "chesses_users_white_id",
				Columns:    []*schema.Column{ChessesColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "chesses_users_black_id",
				Columns:    []*schema.Column{ChessesColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// GameHistoriesColumns holds the columns for the "game_histories" table.
	GameHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "num", Type: field.TypeInt},
		{Name: "move", Type: field.TypeString},
		{Name: "game_id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// GameHistoriesTable holds the schema information for the "game_histories" table.
	GameHistoriesTable = &schema.Table{
		Name:       "game_histories",
		Columns:    GameHistoriesColumns,
		PrimaryKey: []*schema.Column{GameHistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "game_histories_chesses_moves",
				Columns:    []*schema.Column{GameHistoriesColumns[4]},
				RefColumns: []*schema.Column{ChessesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "game_histories_users_moves",
				Columns:    []*schema.Column{GameHistoriesColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 100},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "password", Type: field.TypeString, Size: 255},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChessesTable,
		GameHistoriesTable,
		UsersTable,
	}
)

func init() {
	ChessesTable.ForeignKeys[0].RefTable = UsersTable
	ChessesTable.ForeignKeys[1].RefTable = UsersTable
	GameHistoriesTable.ForeignKeys[0].RefTable = ChessesTable
	GameHistoriesTable.ForeignKeys[1].RefTable = UsersTable
}
